<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.shuku.dao.BookDao">

    <resultMap id="bookMap" type="com.shuku.entity.Book">
        <id column="id" property="id" />
        <result column="booktitle" property="booktitle" />
        <result column="bookauthor" property="bookauthor" />
        <result column="bookpubyear" property="bookpubyear" />
        <result column="booksummary" property="booksummary" />
        <result column="typeid" property="typeid" />
        <result column="bookformat" property="bookformat" />
        <result column="downloadtimes" property="downloadtimes" />
        <result column="bookfile" property="bookfile" />
        <result column="bookcover" property="bookcover" />
    </resultMap>

    <sql id="book_columns">
        id, booktitle, bookauthor, bookpubyear, booksummary,
            typeid, bookformat, downloadtimes, bookfile, bookcover
    </sql>

    <!--通过图书ID查询图书-->
    <select id="queryById" parameterType="long" resultMap="bookMap">
        SELECT
        <include refid="book_columns"/>
        from book WHERE id=#{id}
    </select>

    <!--通过图书名称判断是否已经存在-->
    <select id="queryByTitle" parameterType="String" resultMap="bookMap">
        SELECT
        <include refid="book_columns" />
        from book where booktitle=#{title}
    </select>

    <!--查询电子图书总数-->
    <select id="queryNumberOfBooks" resultType="int">
        SELECT count(*) from book
    </select>

    <!--查询各大类型图书数目-->
    <select id="queryNumberOfSomeTypeBooks" parameterType="int" resultType="int">
        SELECT count(*) FROM book WHERE typeid LIKE concat(#{largeType},'%')
    </select>


    <!--添加图书-->
    <insert id="addBook" parameterType="Book">
        insert into 
        book(id,booktitle,bookauthor,bookpubyear,booksummary,typeid,bookformat,downloadtimes,bookfile,bookcover)
        values(#{id},#{booktitle},#{bookauthor},#{bookpubyear},#{booksummary},#{typeid},#{bookformat},#{downloadtimes},#{bookfile},#{bookcover})
    </insert>

    <!--查询主类型图书-->
    <select id="getLargeTypeBooks" resultMap="bookMap">
        SELECT
        id, booktitle, bookfile, bookcover
        from book where typeid in
        <foreach collection="list" item="bookTypeId" index="index"
                 open="(" close=")" separator=",">#{bookTypeId}</foreach>
        limit #{startRow}, #{pageSize}
    </select>
    <!--查询主类型图书数量-->
    <select id="getTotalOfLTBooks" resultType="int">
        SELECT
        count(*)
        from book where typeid in
        <foreach collection="list" item="bookTypeId" index="index"
                 open="(" close=")" separator=",">#{bookTypeId}</foreach>
    </select>

    <!--查询小类型图书-->
    <select id="getSmallTypeBooks" resultMap="bookMap">
        select
        id, booktitle, bookfile, bookcover
        from book where typeid=#{typeid}
        limit #{startRow}, #{pageSize}
    </select>
    <!--查询小类型图书数量-->
    <select id="getTotalOfSTBooks" resultType="int">
        select
        count(*)
        from book where typeid=#{typeid}
    </select>


    <!--查询图书的下载次数-->
    <select id="queryByDownloadTimes" resultMap="bookMap">
        select
        <include refid="book_columns" />
        from book
        order by downloadtimes desc,
        bookpubyear desc
        limit 6
    </select>

    <!--下载次数加1-->
    <update id="addDownloadTimes" parameterType="long">
        update book set
        downloadtimes=downloadtimes+1
        where id=#{id}
    </update>

    <!--通过书名模糊查询图书-->
    <select id="searchBookByTitle" parameterType="String" resultMap="bookMap">
        select
        <include refid="book_columns" />
        from book
        where booktitle LIKE concat('%', #{searchTxt}, '%')
        order by downloadtimes desc
        limit 10
    </select>

    <!--通过作者模糊查询图书-->
    <select id="searchBookByAuthor" parameterType="String" resultMap="bookMap">
        select
        <include refid="book_columns" />
        from book
        where book_author LIKE concat('%', #{searchTxt}, '%')
        order by downloadtimes desc
        limit 10
    </select>

    <!--删除图书-->
    <delete id="deleteBook" parameterType="long">
        delete from book where id=#{id}
    </delete>

</mapper>